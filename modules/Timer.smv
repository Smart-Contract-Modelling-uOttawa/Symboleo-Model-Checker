--------------------------------------------------------------------------------------
-- 'start' start timer from 0 to '_max_time_'. 
--------------------------------------------------------------------------------------
MODULE Timer(start, _max_time_)
  DEFINE
	_time := time;
  
  VAR
	time : -1 .. _max_time_;
	
  ASSIGN
    init(time) 	:= -1;
    next(time) 	:= case
       time=-1 & start 		               	: 0;
       time>-1 & start & time < _max_time_ 	: time + 1;
       time = _max_time_ & start			: _max_time_;
       TRUE                                 : time;
    esac;
		
MODULE main
  VAR
	start: boolean;
	timer : Timer(start, 10);
	
	--* Number	   : 1.0
	--* Description: timer never counts until it starts
	--* Type	   : necessary property
	--* Pattern	   : Absence pattern #2
	LTLSPEC F(timer.start) -> (!(timer.time > -1) U timer.start)
	
	--* Number	   : 1.1
	--* Description: time shall be additive
	--* Type	   : necessary property
	--* Intention  : 
	--* Pattern	   : Universality pattern #1
	LTLSPEC G(timer.time+1=next(timer.time) | timer.time=next(timer.time));
	
	--* Number	   : 1.2
	--* Description: as long as 'start' is false, timer stops counting
	--* Type	   : necessary property
	--* Intention  : 
	--* Pattern	   : Universality pattern #1
	LTLSPEC G(!timer.start -> timer.time = next(timer.time))
	

	
	